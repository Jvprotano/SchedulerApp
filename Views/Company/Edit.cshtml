@model AppAgendamentos.ViewModels.CompanyViewModel
@{
    ViewData["Title"] = "Edit Company";
}

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger" role="alert">
                    @foreach (var modelState in ViewData.ModelState.Values)
                    {
                        foreach (var error in modelState.Errors)
                        {
                            <span>@error.ErrorMessage</span>
                        }
                    }
                </div>
            }

<style>
    .images {
        max-width: 100%;
        max-height: 300px;
        margin-top: 20px;
    }

    .divImages {
        display: flex;
        justify-content: center;
    }

    .opening-hours-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: space-between;
    }

    .opening-hours-table {
        width: 28%;
        border-collapse: collapse;
        margin-top: 10px;
    }

    .opening-hours-table th,
    .opening-hours-table td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: left;
    }

    .opening-hours-table th {
        background-color: #f2f2f2;
    }

    .opening-hours-table input[type="time"] {
        width: 120px;
        padding: 8px;
        box-sizing: border-box;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .day-container {
        text-align: center;
    }

    .day-name {
        font-size: 18px;
        font-weight: bold;
    }
</style>

<h1>@ViewData["Title"]</h1>
<div class="divImages" id="divMessageImage">
    <img class="images" src="/images/autogene.jpeg" alt="Auto generated Image" border="0">
</div>

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    @Html.HiddenFor(c => c.Id)
    @Html.HiddenFor(c => c.ImageUrl)
    <div>
        <div class="upload-btn-wrapper" id="divBtnUploadImage">
            <button class="btn btn-primary" type="button" id="uploadButton">Upload a Logo</button>
            <input type="file" name="ImageFile" id="uploadInput" accept="image/*" style="display: none;">
        </div>
        <div class="row">
        @* <div class="form-group col-md-4">
                <label>@Html.DisplayNameFor(c=>c.AutoGeneratedImage)@Html.CheckBoxFor(c => c.AutoGeneratedImage, new { @class = "form-control" })</label>
                @Html.ValidationMessageFor(c => c.AutoGeneratedImage, "", new { @class = "text-danger" })
        </div> *@
            <div class="divImages" id="divUploadedImage">
                <!-- Display the uploaded image -->
        <img class="images" id="uploadedImage" src=@Model.ImageUrl alt="Uploaded Image">
        </div>
        </div>

    </div>
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(c => c.Name, new { @class = "control-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(c => c.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.Name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(c => c.Cnpj, new { @class = "control-label" })
            @Html.TextBoxFor(c => c.Cnpj, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.Cnpj, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(c => c.Description, new { @class = "control-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(c => c.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-3">
            @Html.LabelFor(c => c.Email, new { @class = "control-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(c => c.Email, new { @class = "form-control", placeholder = "mail@mail.com" })
            @Html.ValidationMessageFor(c => c.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(c => c.SelectedCategoryIds, new { @class = "control-label", @title = "Hold Ctrl to select more then one"})
            @Html.ListBoxFor(c => c.SelectedCategoryIds, Model.CategoriesSelectIds, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.SelectedCategoryIds, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(c => c.SelectedExistingNames, new { @class = "control-label", @title = "Hold Ctrl to select more then one" })
            <button type="button" class="btn btn-sm btn-success" id="addService">Add Service</button>
            @Html.ListBoxFor(c => c.SelectedExistingNames, Model.ServicesExistingOptionsSelect, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.SelectedExistingNames, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div id="serviceDetails">
            @foreach (var service in Model.ServicesOffered)
            {
                 <div class="service" id=@(Model.ServicesOffered.IndexOf(service))>
                    <label>Service Name:</label>
                    <input type="text" name="ServicesOffered[@Model.ServicesOffered.IndexOf(service)].Name" value="@service.Name">

                    <label>Price:</label>
                    <input type="number" min="1" step="any" name="ServicesOffered[@Model.ServicesOffered.IndexOf(service)].Price" value="@service.Price">

                    <label>Duration:</label>
                    <input type="text" name="ServicesOffered[@Model.ServicesOffered.IndexOf(service)].Duration" value="@service.Duration"  id="durationInput" pattern="^([0-1]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$" placeholder="00:00:00" required>
                    
                    <input type="hidden" name="ServicesOffered[@Model.ServicesOffered.IndexOf(service)].Id" value="@service.Id">
                    <input type="hidden" name="ServicesOffered[@Model.ServicesOffered.IndexOf(service)].CompanyId" value="@service.CompanyId">

                    <button type="button" class="btn btn-sm btn-danger">Remove</button>
                </div>
            }
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="form-group col-md-4">
            <label>@Html.DisplayNameFor(c=>c.IsVirtual)@Html.CheckBoxFor(c => c.IsVirtual, new { @class = "form-control" })</label>
            @Html.ValidationMessageFor(c => c.IsVirtual, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" id="addressDiv">
        <div class="form-group col-md-4">
            @Html.LabelFor(c => c.CityId, new { @class = "control-label" })
            <span class="text-danger">*</span>
            @Html.DropDownListFor(c => c.CityId, Model.CitiesSelect, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.CityId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(c => c.Address, new { @class = "control-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(c => c.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.Address, "", new { @class = "text-danger" })

        </div>
        <div class="form-group col-md-2">
            @Html.LabelFor(c => c.AddressNumber, new { @class = "control-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(c => c.AddressNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.AddressNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <h4>Opening Hours</h4>
    <br />
    <div class="opening-hours-container">
        @foreach (var horario in Model.OpeningHours)
        {
            <div class="opening-hours-table">
                <div class="day-container">
                    <div class="day-name">
                        <h2>@horario.DayOfWeek</h2>
                    </div>
                </div>
                <table>
                    <tr>
                        <th>Abertura</th>
                        <th>Fechamento</th>
                    </tr>
                    <tr>
                        <input type="hidden" name="OpeningHours[@Model.OpeningHours.IndexOf(horario)].DayOfWeek" value="@horario.DayOfWeek" />
                        <input type="hidden" name="OpeningHours[@Model.OpeningHours.IndexOf(horario)].Id" value="@horario.Id" />
                        <td><input type="time" name="OpeningHours[@Model.OpeningHours.IndexOf(horario)].OpeningHour" value="@horario.OpeningHour" /></td>
                        <td><input type="time" name="OpeningHours[@Model.OpeningHours.IndexOf(horario)].ClosingHour" value="@horario.ClosingHour" /></td>
                    </tr>
                </table>
            </div>
        }
    </div>
    </div>
    </br>
    <div class="row" style="display: flex;justify-content: flex-end;padding-right: 8%;">
        <a asp-action="Index" asp-controller="Home" class="btn btn-danger"><i class="bi bi-arrow-left"></i>Back</a>
        <input type="submit" value="Save" class="btn btn-success">
    </div>
</form>
@section scripts{
    <script src="~/js/company.js"></script>
}